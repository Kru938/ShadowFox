import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class InventoryManagementSystem extends JFrame {
    private JTextField idField, nameField, quantityField, priceField;
    private DefaultTableModel tableModel;
    private JTable table;

    public InventoryManagementSystem() {
        // Window settings
        setTitle("Inventory Management System");
        setSize(700, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Layout manager
        setLayout(new BorderLayout());

        // ================== INPUT PANEL ==================
        JPanel inputPanel = new JPanel(new GridLayout(7, 2, 2, 2));

        inputPanel.add(new JLabel("Item ID:"));
        idField = new JTextField();
        inputPanel.add(idField);

        inputPanel.add(new JLabel("Item Name:"));
        nameField = new JTextField();
        inputPanel.add(nameField);

        inputPanel.add(new JLabel("Quantity:"));
        quantityField = new JTextField();
        inputPanel.add(quantityField);

        inputPanel.add(new JLabel("Price:"));
        priceField = new JTextField();
        inputPanel.add(priceField);

        // Buttons
        JButton addButton = new JButton("Add");
        JButton updateButton = new JButton("Update");
        JButton deleteButton = new JButton("Delete");
        JButton clearButton = new JButton("Clear");

        inputPanel.add(addButton);
        inputPanel.add(updateButton);
        inputPanel.add(deleteButton);
        inputPanel.add(clearButton);

        add(inputPanel, BorderLayout.NORTH);

        // ================== TABLE ==================
        String[] columnNames = {"ID", "Name", "Quantity", "Price"};
        tableModel = new DefaultTableModel(columnNames, 0);
        table = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(table);

        add(scrollPane, BorderLayout.CENTER);

        // ================== EVENT HANDLING ==================
        addButton.addActionListener(e -> {
            String id = idField.getText();
            String name = nameField.getText();
            String quantity = quantityField.getText();
            String price = priceField.getText();

            if (!id.isEmpty() && !name.isEmpty() && !quantity.isEmpty() && !price.isEmpty()) {
                tableModel.addRow(new Object[]{id, name, quantity, price});
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Please fill all fields.");
            }
        });

        updateButton.addActionListener(e -> {
            int selectedRow = table.getSelectedRow();
            if (selectedRow != -1) {
                tableModel.setValueAt(idField.getText(), selectedRow, 0);
                tableModel.setValueAt(nameField.getText(), selectedRow, 1);
                tableModel.setValueAt(quantityField.getText(), selectedRow, 2);
                tableModel.setValueAt(priceField.getText(), selectedRow, 3);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Select a row to update.");
            }
        });

        deleteButton.addActionListener(e -> {
            int selectedRow = table.getSelectedRow();
            if (selectedRow != -1) {
                tableModel.removeRow(selectedRow);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Select a row to delete.");
            }
        });

        clearButton.addActionListener(e -> clearFields());

        // Fill input fields when clicking on table row
        table.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int selectedRow = table.getSelectedRow();
                idField.setText(tableModel.getValueAt(selectedRow, 0).toString());
                nameField.setText(tableModel.getValueAt(selectedRow, 1).toString());
                quantityField.setText(tableModel.getValueAt(selectedRow, 2).toString());
                priceField.setText(tableModel.getValueAt(selectedRow, 3).toString());
            }
        });
    }

    // Helper function to clear fields
    private void clearFields() {
        idField.setText("");
        nameField.setText("");
        quantityField.setText("");
        priceField.setText("");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new InventoryManagementSystem().setVisible(true);
        });
    }
}
